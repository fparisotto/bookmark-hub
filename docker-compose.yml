services:
  backend:
    build:
      context: backend/
    ports:
      - 3000:3000
    depends_on:
      - postgres
    environment:
      APP_ENV: DEV
      DATABASE_CONNECTION_POOL_SIZE: 5
      DATABASE_URL: postgres://main:main@postgres/main
      S3_ENDPOINT: http://minio:9000
      HMAC_KEY: secret
      READABILITY_ENDPOINT: http://readability-api:3001
      RUST_LOG: info
      S3_ACCESS_KEY: ROOTNAME
      S3_BUCKET: bookmark
      S3_REGION: ""
      S3_SECRET_KEY: CHANGEME123
    healthcheck:
      test: curl --fail http://localhost:3000/health-check || exit 1
      timeout: 2s
      interval: 10s
      start_period: 10s
      retries: 5
  readability-api:
    image: ghcr.io/fparisotto/readability-api:v0.0.1
    ports:
      - 3001:3001
  web-spa:
    build:
      context: web-spa/
      args:
        - BACKEND_URL=http://localhost:3000
    depends_on:
      - backend
    ports:
      - 8080:80
  postgres:
    image: postgres:16
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: main
      POSTGRES_PASSWORD: main
      POSTGRES_DB: main
    restart: unless-stopped
    volumes:
      - postgres-data:/data/postgres
  minio:
    image: quay.io/minio/minio
    ports:
      - 9000:9000
      - 9090:9090
    environment:
      MINIO_ROOT_USER: ROOTNAME
      MINIO_ROOT_PASSWORD: CHANGEME123
    restart: unless-stopped
    volumes:
      - minio-data:/data
    command: ["server", "/data", "--console-address", ":9090"]
  mc:
    image: minio/mc
    environment:
      MINIO_ROOT_USER: ROOTNAME
      MINIO_ROOT_PASSWORD: CHANGEME123
      MINIO_ACCESS_KEY: bookmark_user
      MINIO_SECRET_KEY: supersecret
      MINIO_BUCKET: bookmark
    depends_on:
      - minio
    entrypoint: |
      bash -c "
      cat <<EOF > write-policy.json
      {
        \"Version\": \"2012-10-17\",
        \"Statement\": [
          {
            \"Effect\": \"Allow\",
            \"Action\": [
              \"s3:GetBucketLocation\",
              \"s3:ListBucket\",
              \"s3:ListBucketMultipartUploads\",
              \"s3:ListBucketVersions\"
            ],
            \"Resource\": [\"arn:aws:s3:::<BUCKET-NAME>\"]
          },
          {
            \"Effect\": \"Allow\",
            \"Action\": [
              \"s3:AbortMultipartUpload\",
              \"s3:DeleteObject\",
              \"s3:GetObject\",
              \"s3:ListMultipartUploadParts\",
              \"s3:PutObject\"
            ],
            \"Resource\": [\"arn:aws:s3:::<BUCKET-NAME>/*\"]
          }
        ]
      }
      EOF
      /usr/bin/mc alias set local http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} &&
      /usr/bin/mc mb local/$${MINIO_BUCKET} &&
      /usr/bin/mc anonymous set download local/$${MINIO_BUCKET} &&
      /usr/bin/mc admin user add local $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY} &&
      /usr/bin/mc admin policy add local write-policy ./write-policy.json &&
      /usr/bin/mc admin policy set local write-policy user=$${MINIO_ACCESS_KEY}"
volumes:
  postgres-data:
  minio-data:
