name: CI
'on':
  merge_group:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  push:
    branches:
      - master
      - main
    tags:
      - v*
  workflow_dispatch: {}
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v13
      - name: Build on ${{ matrix.host }}
        run: nix flake check -L .#
    strategy:
      matrix:
        host:
          - linux
        include:
          - host: linux
            runs-on: ubuntu-latest
            timeout: 60
    timeout-minutes: ${{ matrix.timeout }}
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v13
      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          path: ~/.cargo
      - name: Clippy
        run: nix develop .# --command just clippy
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v13
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cargo Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          path: ~/.cargo
      - name: Run Integration Tests
        run: |
          nix develop .# --command cargo test -p server --features integration-tests -- --test-threads=1 --nocapture
